{"version":3,"file":"index.js","sources":["../../src/components/adaptiveDispatch.ts","../../src/components/switchback.ts","../../src/components/configureAdaptiveStore.ts"],"sourcesContent":["import { Dispatch } from 'redux'\nimport { IAdpDispatchOptions } from '../types/disaptchTypes'\n\n// @ts-ignore\nconst emoji = String.fromCodePoint('0X1F6A1')\n\n/**\n * @description\n *\n * @param options dispatch, key, verbose\n * <p/>\n * dispath of type Redux Dispatch\n * <p/>\n * key of type string used with switchback to process only the reduces that represents the key\n * <p/>\n * verbose of type boolean and output information to the console windows. This is turned off in production\n *\n * @example\n *  const systemDispatch = () => adaptiveDispatch({\n *    dispatch: store.dispatch,\n *    key: 'SystemState',\n *    verbose: false\n *  })\n *\n * @example\n *  const systemDispatch = () => adaptiveDispatch({\n *    dispatch: store.dispatch,\n *    verbose: false\n *  })\n *\n * @example\n *  const systemDispatch = () => adaptiveDispatch({\n *    dispatch: store.dispatch\n *  })\n *\n * */\nexport function adaptiveDispatch<D extends Dispatch, K extends string | undefined, V extends boolean>(\n  options: IAdpDispatchOptions<D, K, V>,\n) {\n  const { dispatch: _dispatch, key: _key, verbose: _verbose = true } = options || {}\n\n  const loggingOn = _verbose && process.env.NODE_ENV !== 'production'\n\n  return function _fis(action: any) {\n    try {\n      if (loggingOn) {\n        console.log(`${emoji} adaptiveDispatch: ${_key}`)\n      }\n\n      const _action = { ...action, key: _key }\n      _dispatch(_action)\n    } catch (e) {\n      console.error(`${emoji} error in AdaptiveDispatch: ${e}`)\n    }\n  }\n}\n","import { produce } from 'immer'\nimport { ReducersMapObject, StateFromReducersMapObject, AnyAction } from 'redux'\nimport { ISwitchbackOpt } from '../types/switchbackTypes'\n//import { SAGA_EXTERMINATOR } from '../types/storeTypes'\n\n// @ts-ignore\nconst emoji = String.fromCodePoint('0x26F7')\n\n/**\n * @description: Switchback will call only one child reducer if a key is included\n * in the action: ({type:'SET_THEME', payload:'GEEN', key: 'SystemState'}) and\n * return a state object that containing the updated state along with the current\n * state of those reducers not processed. The key must correspond to the name\n * of the reducer within the switchback parameters (case-sensitive). If the key is not present\n * or can not be found then all reducers will be processed (same as\n * redux combinedReducers).\n *\n * @param reducers An object whose values correspond to different reducer\n *   functions that need to be combined into one. One handy way to obtain it\n *   is to use ES6 `import * as reducers` syntax. The reducers may never\n *   return undefined for any action. Instead, they should return their\n *   initial state if the state passed to them was undefined, and the current\n *   state for any unrecognized action. (official redux documentation)\n *\n * @param options for switchback options. All options are optional and include\n *  verbose (boolean) will output information to the console window, sagaBypass (string)\n *  will prevent the processing of any reducer. See ISwitchbackOpt for more inforamtmion\n *\n *  @example\n *    const reducers = switchback({\n *      SystemState,\n *      CounterState,\n *      StatusState,\n *    }, { sagaBypass: '@@SAGABYPASS!', verbose: false})\n *\n *  @example\n *    const reducers = switchback({\n *      SystemState,\n *      CounterState,\n *      StatusState,\n *    }, { verbose: false, sagaBypass: '@@SAGABYPASS!'})\n *\n *  @example\n *    const reducers = switchback({\n *      SystemState,\n *      CounterState,\n *      StatusState,\n *    }, { verbose: false })\n *\n *  @example\n *    const reducers = switchback({\n *      SystemState,\n *      CounterState,\n *      StatusState,\n *    }, { sagaBypass: '@@SAGABYPASS!'})\n *\n *  @example\n *    const reducers = switchback({\n *      SystemState,\n *      CounterState,\n *      StatusState,\n *    })\n *\n * @returns State object representing the reducers\n *\n * */\nexport function switchback<V extends boolean | undefined, S extends string | undefined>(\n  reducers: ReducersMapObject,\n  options?: ISwitchbackOpt<V, S>,\n) {\n  const { verbose, sagaBypass } = options || { verbose: true, sagaBypass: '' }\n  const reducerKeys = Object.keys(reducers)\n  const loggingOn = verbose && process.env.NODE_ENV !== 'production'\n\n  return function _lowerFIS(state: StateFromReducersMapObject<typeof reducers> = {}, action: AnyAction): any {\n    let nextState: StateFromReducersMapObject<typeof reducers> = {}\n    const id = action?.key || undefined\n    let runReduxCombined = false\n\n    /** Build state tree */\n    if (!state) {\n      nextState = _buildStateTree(reducers, reducerKeys, action)\n\n      if (!nextState) {\n        throw new Error(`${emoji} switchback: error with null state`)\n      }\n      return nextState\n    }\n\n    if (id) {\n      if (loggingOn) {\n        console.log(`${emoji} running switchback: ${action.type}`)\n      }\n\n      try {\n        /**\n         * If the dispatched saga does NOT have associated reducer\n         * then just return the current store state - this comes\n         * form either the configureAdaptiveStore.dispatchSaga or\n         * adaptiveSagaDispatch\n         *  */\n        if (id === sagaBypass && id.trim() !== '') {\n          if (loggingOn) {\n            console.log(`${emoji} SAGA Escape Hatch!!! ${action.type}`)\n          }\n          return state\n        }\n\n        const reducer = reducers[id]\n\n        if (reducer) {\n          nextState = produce(state, (draftState: any) => {\n            const nState = draftState\n            const previousStateForKey = state[id]\n            const newState = reducer(previousStateForKey, action)\n            _isStateValid(newState, action, id)\n            nState[id] = newState\n          })\n        } else {\n          if (loggingOn) {\n            console.log(`${emoji} switchback: key does not exists. Continuing with combinedReducer logic`)\n          }\n          runReduxCombined = true\n        }\n      } catch (e: any) {\n        const message = `key = ${id} => Error: ${e.message || ''}`\n        throw new Error(`${emoji} Error within switchback: ${message} `)\n      }\n\n      if (!runReduxCombined) return nextState\n    }\n\n    if (loggingOn) {\n      console.log(`${emoji} => running combinedReducer logic `)\n    }\n\n    for (let i = 0; i < reducerKeys.length; i++) {\n      const key = reducerKeys[i]\n      const reducer = reducers[key]\n\n      if (!reducer) {\n        throw new Error(`Error combinedReducer logic - reducer does not exist ${key}`)\n      }\n\n      const previousStateForKey = state[key]\n      const nextStateForKey = reducer(previousStateForKey, action)\n      _isStateValid(nextStateForKey, action, key)\n      nextState[key] = nextStateForKey\n    }\n    return nextState\n  }\n}\n\nconst _isStateValid = (nextStateForKey: any, action: any, key: string) => {\n  if (!nextStateForKey) {\n    const actionType = action && action.type\n    throw new Error(\n      `${emoji} When called with an action of type ${\n        actionType ? `\"${String(actionType)}\"` : '(unknown type)'\n      }, the slice reducer for key \"${key}\" returned undefined. ` +\n        `To ignore an action, you must explicitly return the previous state. ` +\n        `If you want this reducer to hold no value, make sure you reducers has initial state` +\n        `to represent the return type. For exp, if set to null use {} instead is returning an object.`,\n    )\n  }\n\n  return nextStateForKey\n}\n\nconst _buildStateTree = (reducers: ReducersMapObject, reducerKeys: any, action: AnyAction) => {\n  const nextState: any = {}\n\n  //Build state tree\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i]\n    const reducer = reducers[key]\n\n    if (!reducer) {\n      throw new Error(`Error combinedReducer logic - reducer does not exist ${key}`)\n    }\n\n    const nextStateForKey = reducer({}, action)\n    nextState[key] = nextStateForKey\n  }\n  return nextState\n}\n","import { AnyAction, Dispatch } from 'redux'\nimport { IAdpStoreOptions } from '../types/storeTypes'\n// @ts-ignore\nconst emoji = String.fromCodePoint('0X1F3C2')\n\n/**\n *\n * @description This creates a store that contains two methods: dispatch and dispatchSaga. The\n *  configureAdaptiveStore takes one parameter of type Redux Dispatch.\n *\n *  <p/>\n *  <p>The dispatch function creates a Redux dispatch that takes a key which is used with switchback.<p/>\n *  <p/>\n *  <p>The dispatchSaga function creates a Redux dispatch that takes a key which is used to\n *  bypass switchback. The same key must be added to switchback options (sagaBypass). See\n *  switch for more information<p/>\n *\n * @param options take dispatch of type Redux Dispatch\n *\n * @example\n **\n *  export const adpStore = configureAdaptiveStore({\n *    dispatch: store.dispatch\n *  })\n *\n * @example\n *  export const createAdpStore = () => {\n *   return configureAdaptiveStore({\n *     dispatch: store.dispatch,\n *   })\n * }\n *\n * <p/>\n * import { configureStore } from '@reduxjs/toolkit'*\n * => store from configureStore\n */\nexport function configureAdaptiveStore<D extends Dispatch>(options: IAdpStoreOptions<D>) {\n  const { dispatch: _dispatch } = options || {}\n\n  const dispatch = (key: string) => {\n    return function _hammerHead(action: AnyAction) {\n      const _a = { ...action, key }\n      try {\n        _dispatch(_a)\n      } catch (e) {\n        throw new Error(`${emoji} Error dispatching from createAdaptive: KEY= ${key}: Error => ${e}`)\n      }\n    }\n  }\n\n  const dispatchSaga = (sagaKey: string) => {\n    return function _bravo(action: AnyAction) {\n      const _a = { ...action, key: sagaKey }\n      try {\n        _dispatch(_a)\n      } catch (e) {\n        throw new Error(`${emoji} Error dispatching Saga from createAdaptive: Error => ${e}`)\n      }\n    }\n  }\n\n  return {\n    dispatch,\n    dispatchSaga,\n  }\n}\n"],"names":["emoji","produce"],"mappings":"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"}